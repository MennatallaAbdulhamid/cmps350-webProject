// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  email    String @id @unique
  password String
  role     String
}

model Student {
  studentId     String         @id @unique
  name          String
  email         String         @unique
  password      String
  registrations Registration[] // ← back-relation from Registration.student
}

model Course {
  code          String               @id
  name          String
  category      String
  credits       Int
  description   String
  prerequisites CoursePrerequisite[] // ← back-relation from CoursePrerequisite.course
  offerings     SemesterOffering[] // ← back-relation from SemesterOffering.course
  sections      Section[] // ← your existing back-relation
  registrations Registration[] // ← NEW: back-relation from Registration.course
}

model CoursePrerequisite {
  id               Int    @id @default(autoincrement())
  course           Course @relation(fields: [courseCode], references: [code])
  courseCode       String
  prerequisiteCode String
}

model SemesterOffering {
  id         Int    @id @default(autoincrement())
  course     Course @relation(fields: [courseCode], references: [code])
  courseCode String
  semester   String
}

model Section {
  id         String @id
  course     Course @relation(fields: [courseCode], references: [code])
  courseCode String
  instructor String
  capacity   Int
  schedule   String @default("")
  deadline   String @default("")
  location   String @default("")

  registrations Registration[] // ← NEW: back-relation from Registration.section
  preferences   Preference[] // ← NEW: back-relation from Preference.section
}

model Registration {
  id                 Int     @id @default(autoincrement())
  student            Student @relation(fields: [studentId], references: [studentId])
  studentId          String
  course             Course  @relation(fields: [courseCode], references: [code])
  courseCode         String
  semester           String
  section            Section @relation(fields: [sectionId], references: [id])
  sectionId          String
  status             String
  grade              String? @default("")
  creditsEarned      Int?    @default(0)
  registrationStatus String? @default("")

  preferences Preference[] // ← NEW: back-relation from Preference.registration
}

model Preference {
  id             Int          @id @default(autoincrement())
  registration   Registration @relation(fields: [registrationId], references: [id])
  registrationId Int
  section        Section      @relation(fields: [sectionId], references: [id])
  sectionId      String
}
